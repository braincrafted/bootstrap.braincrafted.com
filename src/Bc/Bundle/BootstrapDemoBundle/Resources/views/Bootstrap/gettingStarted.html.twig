{% extends 'BcBootstrapDemoBundle::layout.html.twig' %}

{% block title %}Getting Â· Twitter Bootstrap for Symfony2{% endblock %}

{% block body %}

<!-- Subhead
================================================== -->
<header class="jumbotron subhead" id="overview">
  <div class="container">
    <h1>Getting started</h1>
    <p class="lead">Overview of the project, its contents, and how to get started with a simple template.</p>
  </div>
</header>


  <div class="container">

    <!-- Docs nav
    ================================================== -->
    <div class="row">
      <div class="span3 bs-docs-sidebar">
        <ul class="nav nav-list bs-docs-sidenav">
          <li><a href="#download-bootstrap"><i class="icon-chevron-right"></i> Download</a></li>
          <li><a href="#download-assets"><i class="icon-chevron-right"></i> Assets</a></li>
          <li><a href="#configuration"><i class="icon-chevron-right"></i> Configuration</a></li>
          <li><a href="#file-structure"><i class="icon-chevron-right"></i> File structure</a></li>
          <li><a href="#contents"><i class="icon-chevron-right"></i> What's included</a></li>
          <li><a href="#html-template"><i class="icon-chevron-right"></i> HTML template</a></li>
          <li><a href="#what-next"><i class="icon-chevron-right"></i> What next?</a></li>
        </ul>
      </div>
      <div class="span9">



        <!-- Download
        ================================================== -->
        <section id="download-bootstrap">
          <div class="page-header">
            <h1>1. Installation</h1>
          </div>
          <p class="lead">Before installing Twitter Bootstrap for Symfony2 you need to have a working installation of Symfony 2.2.* at hand. </p>

          <div class="row-fluid">
            <div class="span8">
              <h2>Composer</h2>
              <p><strong>Fastest way to get started:</strong> add the following line to your <code>composer.json</code> file and run <code>composer update braincrafted/bootstrap-bundle</code>.</p>
<pre class="prettyprint linenums">
{
    "require": {
        "braincrafted/bootstrap-bundle": "dev-master"
    }
}
</pre>
            </div>
            <div class="span4">
              <h2>Download source</h2>
              <p>Download the source files of the Bootstrap for Symfony2 bundle from Github.</p>
              <p><a class="btn btn-large" href="https://github.com/braincrafted/bootstrap-bundle/zipball/master" >Download source</a></p>
            </div>
          </div>

          <div class="row-fluid">
            <div class="span12">
              <h2>Activate</h2>
              <p>You have to add <code>BcBootstrapBundle</code> to your <code>AppKernel.php</code>:</p>
<pre class="prettyprint linenums">
# app/AppKernel.php
...
class AppKernel extends Kernel
{
    public function registerBundles()
    {
        $bundles = array(
            ...
            new Bc\Bundle\BootstrapBundle\BcBootstrapBundle()
        );
        ...
        return $bundles;
    }
    ...
}
</pre>
            </div>
          </div>
        </section>


        <!-- Assets
        ================================================== -->
        <section id="download-assets">
          <div class="page-header">
            <h1>2. Assets</h1>
          </div>
          <p class="lead">Since Version 1.3.0 BootstrapBundle no longer contains the asset files from Twitter Bootstrap. You can now use the method you find the most convinient to obtain those files. Some possibilities include downloading the files from Twitter Bootstrap, Composer or Bower.</p>

          <div class="row-fluid">
            <div class="span8">
              <h2>Composer</h2>
              <p>Since you are probably already using Composer this is the easiest way to get started. Update your <code>composer.json</code> file and execute the following line: <code>composer update twitter/bootstrap</code>.</p>
<pre class="prettyprint linenums">
{
    "require": {
        "twitter/bootstrap": "2.3.*"
    }
}
</pre>

              <p>If you also want to install jQuery using Composer you should add the following configuration to your <code>composer.json</code>.</p>
<pre class="prettyprint linenums">
{
    "repositories": [
        {
            "type": "package",
            "package": {
                "name": "jquery/jquery",
                "version": "1.9.1",
                "dist": {
                    "url": "http://code.jquery.com/jquery-1.9.1.js",
                    "type": "file"
                }
            }
        }
    ],
    "require": {
        "jquery/jquery":                        "1.9.*"
    }
}
</pre>
            </div>
            <div class="span4">
              <h2>Download source</h2>
              <p>If you don't want to use Composer to obtain you can download a ZIP archive with the static files from the Bootstrap repository on Github.</p>
              <p><a class="btn btn-large" href="https://github.com/twitter/bootstrap/zipball/master" >Download source</a></p>
              <h2>Bower</h2>
              <p>Of course you can also use <a href="http://twitter.github.com/bower/">Bower</a>. Please check the Bower documentation on how to install packages.
            </div>
          </div>

          <div class="row-fluid">
            <div class="span12">
              <h2>With Assetic</h2>
              <p>You can use Assetic to include the Bootstrap assets in your layout. If you are on a new project, you can use the following boilerplate to get you started:</p>
<pre class="prettyprint linenums">
# app/config/config.yml
...
# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [ ]
    filters:
        less:
            node:       /usr/local/bin/node
            node_paths: [/usr/local/lib/node_modules]
            apply_to:   "\.less$"
        cssrewrite: ~
...
</pre>
              <p>If you want to use LessPHP to compile the Bootstrap LESS files, you need to change your configuration to this:
<pre class="prettyprint linenums">
bc_bootstrap:
    less_filter: lessphp

# Assetic Configuration
assetic:
    filters:
        lessphp:
            file: %kernel.root_dir%/../vendor/leafo/lessphp/lessc.inc.php
            apply_to:   "\.less$"
        cssrewrite: ~
</pre>

              <p>You can also tell BcBootstrapBundle to not include the CSS code for responsive layouts:</p>
<pre class="prettyprint linenums">
bc_bootstrap:
  include_responsive: false
</pre>

              <p>It is also possible to deactivate Less completley:</p>
<pre class="prettyprint linenums">
bc_bootstrap:
  less_filter: none
</pre>

              <p>You also need to place the icons in your <code>web</code> folder. You can either copy the icons (they are located in <code>vendor/twitter/bootstrap/img</code>) or you symlink them into your <code>web</code> folder:
<pre class="prettyprint linenums">
$ mkdir -p web/img
$ cd web/img
$ ln -s ../../vendor/twitter/bootstrap/img/glyphicons-halflings.png
$ ln -s ../../vendor/twitter/bootstrap/img/glyphicons-halflings-white.png
</pre>
              <p>If you continue reading you will find a HTML template you can use with this configuration.
            </div>
          </div>

          <div class="row-fluid">
            <div class="span12">
              <h2>Without Assetic</h2>
              <p>When you don't want to use Assetic in your project (why?) you can symlink the asset files from the <code>vendor/twitter/bootstrap</code> directory into your web directory:</p>
<pre class="prettyprint linenums">
$ mkdir -p web/bootstrap/css
$ cd web/bootstrap/css
$ ln -s ../../../vendor/twitter/bootstrap/docs/assets/css/bootstrap.css bootstrap.css
$ ln -s ../../../vendor/twitter/bootstrap/docs/assets/css/bootstrap-responsive.css bootstrap-responsive.css
$ cd ..
$ mkdir -p js
$ cd js
$ ln -s ../../../vendor/twitter/bootstrap/docs/assets/js/bootstrap.min.js bootstrap.min.js
$ cd ..
$ ln -s ../../vendor/twitter/bootstrap/img img
</pre>
            </div>
          </div>

        </section>


        <!-- Configuration
        ================================================== -->
        <section id="configuration">
          <div class="page-header">
            <h1>3. Configuration</h1>
          </div>
          <p class="lead">BootstrapBundle supports a lot of functionality out of the box. However, if you want to adapt the bundle to your needs you can do this by modifying your <code>config.yml</code>.</p>

          <div class="row-fluid">
            <div class="span12">
              <h2>BootstrapBundle</h2>
              <p>BootstrapBundle automatically configures Assetic for you. You can change the default path to the Twitter Bootstrap asset files and jQuery
<pre class="prettyprint linenums">
# app/config.yml
bc_bootstrap:
    assets_dir:  %kernel.root_dir%/../vendor/twitter/bootstrap
    jquery_path: %kernel.root_dir%/../vendor/jquery/jquery/jquery-1.9.1.js
</pre>
            </div>
          </div>

          <div class="row-fluid">
            <div class="span12">
              <h2>Assetic</h2>
              <p>When you have AsseticBundle installed BootstrapBundle will automatically configure the assets from Twitter Bootstrap for you. If you want to change the configuration you can do this by overwritting the Assetic configuration.</p>
              <p>This is the default of Assetic:</p>
<pre class="prettyprint linenums">
# app/config.yml
assetic:
    ...
    assets:
        bootstrap_css:
            inputs:
                - %kernelbc_bootstrap.assets_dir%/less/bootstrap.less
                - %kernelbc_bootstrap.assets_dir%/less/responsive.less
            filters:
                - less
                - cssrewrite
            output: css/bootstrap.css
        bootstrap_js:
            inputs:
                - %bc_bootstrap.assets_dir%/js/bootstrap-transition.js
                - %bc_bootstrap.assets_dir%/js/bootstrap-alert.js
                - %bc_bootstrap.assets_dir%/js/bootstrap-button.js
                - %bc_bootstrap.assets_dir%/js/bootstrap-carousel.js
                - %bc_bootstrap.assets_dir%/js/bootstrap-collapse.js
                - %bc_bootstrap.assets_dir%/js/bootstrap-dropdown.js
                - %bc_bootstrap.assets_dir%/js/bootstrap-modal.js
                - %bc_bootstrap.assets_dir%/js/bootstrap-tooltip.js
                - %bc_bootstrap.assets_dir%/js/bootstrap-popover.js
                - %bc_bootstrap.assets_dir%/js/bootstrap-scrollspy.js
                - %bc_bootstrap.assets_dir%/js/bootstrap-tab.js
                - %bc_bootstrap.assets_dir%/js/bootstrap-typeahead.js
                - %bc_bootstrap.assets_dir%/js/bootstrap-affix.js
            output: js/bootstrap.js
        jquery:
            inputs:
                - %bc_bootstrap.jquery_path%
            output: js/jquery.js
</pre>
            </div>
          </div>

          <div class="row-fluid">
            <div class="span12">
              <h2>Form theme</h2>
              <p>BootstrapBundle automatically styles every form in your application with Twitter Bootstrap. If you want to use a different form theme than the one provided by BootstrapBundle, you can change your Twig configuration</p>
<pre class="prettyprint linenums">
# app/config.yml
twig:
    form:
        resources:
            - "AcmeBundle:Form:form_div_layout.html.twig"
</pre>
            </div>
          </div>
          <div class="row-fluid">
            <div class="span12">
              <h2>KnpMenu theme</h2>
              <p>If you have KnpMenuBundle installed BootstrapBunde will automatically configure it to use the menu theme provided by BootstrapBundle. You can change this in your <code>config.yml</code>:</p>
<pre class="prettyprint linenums">
# app/config.yml
knp_menu:
   twig:
       template: "AcmeBundle:Menu:menu.html.twig"
</pre>
            </div>
          </div>

          <div class="row-fluid">
            <div class="span12">
              <h2>KnpPaginator theme</h2>
              <p>KnpPaginatorBundle is also automatically detected by BootstrapBundle. If you want to use another theme you can do this in <code>config.yml</code>:</p>
<pre class="prettyprint linenums">
# app/config.yml
knp_paginator:
    template:
        pagination: AcmeBundle:Pagination:pagination.html.twig
</pre>
            </div>
          </div>

        </section>



        <!-- File structure
        ================================================== -->
        <section id="file-structure">
          <div class="page-header">
            <h1>4. File structure</h1>
          </div>
          <p class="lead">Within the download you'll find the following file structure and contents.</p>
          <p>Once downloaded, unzip the compressed folder to see the structure of (the compiled) Bootstrap Bundle. You'll see something like this:</p>
<pre class="prettyprint">
  Bc/
  âââ Bundle/
      âââ BootstrapBundle/
          âââ DependencyInjection
          â   âââ BcBootstrapExtension.php
          â   âââ Configuration.php
          âââ Resources
          â   âââ config
          â   â   âââ services.yml
          â   âââ views
          â   â   âââ Form
          â   â   â   âââ form_div_layout.html.twig
          â   â   âââ Menu
          â   â   â   âââ menu.html.twig
          â   â   âââ Pagination
          â   â   â   âââ pagination.html.twig
          â   â   âââ _html5shiv.html.twig
          âââ Tests
          â   âââ Twig
          â   â   âââ BootstrapBadgeExtensionTest.php
          â   â   âââ BootstrapIconExtensionTest.php
          â   â   âââ BootstrapLabelExtensionTest.php
          âââ Twig
          â   âââ BootstrapBadgeExtension.php
          â   âââ BootstrapIconExtension.php
          â   âââ BootstrapLabelExtension.php
          âââ BcBootstrapBundle.php
          âââ composer.json
          âââ README.md
</pre>
          <p>The Bootstrap for Symfony2 bundle only contains the compiled and not minified versions of the CSS and Javascript files. We recommend using Assetic to minify the files. If you want to compile your own version of Twitter for Bootstrap you can do this. Just look at the content of <code>_javascripts.html.twig</code> and <code>_stylesheets.html.twig</code>, copy the content into your bundle and replace the CSS and JavaScript files with your own. The image files are compressed using <a href="http://imageoptim.com/">ImageOptim</a>, a Mac app for compressing PNGs.</p>
          <p>Please note that all JavaScript plugins require jQuery to be included. jQuery is included in this bundle, however we recommend loading it from Google CDN and using the included version only as backup.</p>
          <p>If you embed the <code>_javascripts.html.twig</code> file you are good to go. This template tries to load jQuerty from Google CDN and embeds the local version if it fails.</p>
        </section>



        <!-- Contents
        ================================================== -->
        <section id="contents">
          <div class="page-header">
            <h1>5. What's included</h1>
          </div>
          <p class="lead">Bootstrap for Symfony2 does not only include Twitter Bootstrap but also come with templates and Twig filters. To make it easy for existing users of Twitter Bootstrap the <a href="http://bootstrap.braincrafted.com">Bootstrap for Symfony2 documentation</a> uses the same format and categories as the documentation of Twitter Bootstrap.</p>

          <h2>Docs sections</h2>
          <h4><a href="{{ path('bc_bootstrap_demo_scaffolding') }}">Scaffolding</a></h4>
          <p>Global styles for the body to reset type and background, link styles, grid system, and two simple layouts.</p>
          <h4><a href="{{ path('bc_bootstrap_demo_baseCss') }}">Base CSS</a></h4>
          <p>Styles for common HTML elements like typography, code, tables, forms, and buttons. Also includes <a href="http://glyphicons.com">Glyphicons</a>, a great little icon set.</p>
          <h4><a href="{{ path('bc_bootstrap_demo_components') }}">Components</a></h4>
          <p>Basic styles for common interface components like tabs and pills, navbar, alerts, page headers, and more.</p>
          <h4><a href="{{ path('bc_bootstrap_demo_javascript') }}">Javascript plugins</a></h4>
          <p>Similar to Components, these Javascript plugins are interactive components for things like tooltips, popovers, modals, and more.</p>

          <h2>List of components</h2>
          <p>Together, the <strong>Components</strong> and <strong>Javascript plugins</strong> sections provide the following interface elements:</p>
          <ul>
            <li>Button groups</li>
            <li>Button dropdowns</li>
            <li>Navigational tabs, pills, and lists (theme for KnpMenuBundle)</li>
            <li>Navbar (theme for KnpMenuBundle)</li>
            <li>Labels</li>
            <li>Badges</li>
            <li>Page headers and hero unit</li>
            <li>Thumbnails</li>
            <li>Alerts</li>
            <li>Progress bars</li>
            <li>Modals</li>
            <li>Dropdowns</li>
            <li>Tooltips</li>
            <li>Popovers</li>
            <li>Accordion</li>
            <li>Carousel</li>
            <li>Typeahead</li>
          </ul>
          <p>In future guides, we may walk through these components individually in more detail. Until then, look for each of these in the documentation for information on how to utilize and customize them.</p>
        </section>



        <!-- HTML template
        ================================================== -->
        <section id="html-template">
          <div class="page-header">
            <h1>6. Basic HTML template</h1>
          </div>
          <p class="lead">With a brief intro into the contents out of the way, we can focus putting Bootstrap to use. To do that, we'll utilize a basic HTML template that includes everything we mentioned in the <a href="#file-structure">File structure</a>.</p>
          <p>Now, here's a look at a <strong>typical HTML file</strong>:</p>
<pre class="prettyprint linenums">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Bootstrap 101 Template&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;h1&gt;Hello, world!&lt;/h1&gt;
    &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</pre>
          <p>To make this <strong>a Bootstrapped template</strong>, just include the appropriate CSS and JS files:</p>
<pre class="prettyprint linenums">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Bootstrap 101 Template&lt;/title&gt;
    &lt;!-- Bootstrap --&gt;
    &lt;link rel="stylesheet" href="{{ "{{ asset('css/bootstrap.css') }}" }}"&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;h1&gt;Hello, world!&lt;/h1&gt;
    &lt;script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"&gt;&lt;/script&gt;
    &lt;script>window.jQuery || document.write('&lt;script src="{{ "{{ asset('js/jquery.js') }}" }}"&gt;&lt;\/script&gt;')&lt;/script&gt;
    &lt;script src="{{ "{{ asset('js/bootstrap.js') }}" }}"&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</pre>

          <p><strong>Note:</strong> If you want to use your own copy of jQuery (or provide an alternative), you can either install jQuery via Composer, download the static file or use the one provided with Bootstrap.

          <p><strong>And you're set!</strong> With those two files added, you can begin to develop any site or application with Bootstrap.</p>
        </section>



        <!-- Next
        ================================================== -->
        <section id="what-next">
          <div class="page-header">
            <h1>What next?</h1>
          </div>
          <p class="lead">Head to Github and finally starting installing BootstrapBundle or take a look at BootstrapDemoBundle and view the source code of this documentaton.</p>
          <a class="btn btn-large btn-primary" href="https://github.com/braincrafted/bootstrap-bundle" >BootstrapBundle</a>
          <a class="btn btn-large" href="https://github.com/braincrafted/bootstrap-demo-bundle" style="margin-left: 5px;" >BootstrapDemoBundle</a>
        </section>




      </div>
    </div>

  </div>

{% endblock %}
